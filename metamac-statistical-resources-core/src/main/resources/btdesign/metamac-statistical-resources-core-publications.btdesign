import "classpath:/btdesign/metamac-statistical-resources-core-base.btdesign"
import "classpath:/btdesign/metamac-statistical-resources-core-base-enums.btdesign"

import "classpath:/btdesign/export/metamac-core-common-entity.btdesign"

Application PublicationsStatisticalResources {
	basePackage=unused

	Module domain_publications {
		basePackage=org.siemac.metamac.statistical.resources.core.publication

		// ----------------------------------------------------------------
		// 							SERVICES
		// ----------------------------------------------------------------
		
		Service PublicationService {
			> @PublicationRepository
			> @PublicationVersionRepository
			
			// Publications
	    	"Creates publication version"
			@PublicationVersion createPublicationVersion(@PublicationVersion publicationVersion) throws MetamacException;
			"Updates publication version"
			@PublicationVersion updatePublicationVersion(@PublicationVersion publicationVersion) throws MetamacException;
			"Retrieves publication version by urn"
			@PublicationVersion retrievePublicationVersionByUrn(String publicationVersionUrn) throws MetamacException;
			"Retrieves all publications versions of one publication"
			List<@PublicationVersion> retrievePublicationVersions(String publicationVersionUrn) throws MetamacException;
			"Finds publications by criteria"
    		PagedResult<@PublicationVersion> findPublicationVersionsByCondition(List<ConditionalCriteria> conditions, PagingParameter pagingParameter)  throws MetamacException;
			"Deletes publication version. This must be last version and no published"
    		deletePublicationVersion(String publicationVersionUrn) throws MetamacException;
    		"Creates a new version of a publication, copying metadata from version with provided urn"
    		@PublicationVersion versioningPublicationVersion(String publicationVersionUrnToCopy, @VersionTypeEnum versionType) throws MetamacException;
		}  


		// ----------------------------------------------------------------
		// 							ENTITIES
		// ---------------------------------------------------------------- 

		Entity Publication {
			databaseTable="TB_PUBLICATIONS"
			hint="idSequence=PUBLICATIONS"
			!auditable

			"All versions"
			- Bag<@PublicationVersion> versions cascade="all-delete-orphan" fetch="lazy" inverse <-> publication orderby="id asc";
			
			Repository PublicationRepository {
				save;
				delete;
			}
		}

		Entity PublicationVersion {
			databaseTable="TB_PUBLICATIONS_VERSIONS"
			hint="idSequence=PUBLICATIONS_VERSIONS"
			!auditable

			- @SiemacMetadataStatisticalResource siemacMetadataStatisticalResource databaseColumn="STATISTICAL_RESOURCE_FK" not nullable cascade="all";

			"Parent"
			- @Publication publication not nullable cascade="none" databaseColumn="PUBLICATION_FK" <-> versions;
			
			Repository PublicationVersionRepository {
				save;
				delete;
				findByCondition;
				findByCondition(PagingParameter pagingParameter);
				@PublicationVersion retrieveByUrn(String urn) throws MetamacException;
				@PublicationVersion retrieveLastVersion(Long statisticalResourceId) throws MetamacException;
				@PublicationVersion retrieveByVersion(Long statisticalResourceId, String versionLogic) throws MetamacException;
			}
		}
	}
}