import "classpath:/btdesign/metamac-statistical-resources-core-base.btdesign"
import "classpath:/btdesign/metamac-statistical-resources-core-datasets.btdesign"
import "classpath:/btdesign/metamac-statistical-resources-core-queries-enums.btdesign"
import "classpath:/btdesign/export/metamac-core-common-entity.btdesign"

Application QueriesStatisticalResources {
	basePackage=unused

	Module domain_queries {
		basePackage=org.siemac.metamac.statistical.resources.core.query

		// ----------------------------------------------------------------
		// 							SERVICES
		// ----------------------------------------------------------------
		
		Service QueryService {
			> @QueryRepository
			
			"Retrieve query by urn"
    		@Query retrieveQueryByUrn(String urn) throws MetamacException;
    		"Retrieve all queries"
    		List<@Query> retrieveQueries() throws MetamacException;
    		"Find queries by criteria"
    		PagedResult<@Query> findQueriesByCondition(List<ConditionalCriteria> conditions, PagingParameter pagingParameter)  throws MetamacException;
    		"Create query"
            @Query createQuery(@Query query) throws MetamacException;
            "Update query"
            @Query updateQuery(@Query query) throws MetamacException;
            "Mark query as discontinued because the data is not going to be updated"
            @Query markQueryAsDiscontinued(@Query query) throws MetamacException;
		}  


		// ----------------------------------------------------------------
		// 							ENTITIES
		// ---------------------------------------------------------------- 

		Entity CodeItem {
			databaseTable="TB_CODE_ITEMS"
			hint="idSequence=CODE_ITEMS"
			!auditable
		
			"Added explicitly to avoid that Sculptor generate UUID"
			Long id key;
			String code;
			- @QuerySelectionItem querySelectionItem not nullable cascade="none" databaseColumn="QUERY_SELECTION_ITEM_FK" <-> codes;
			
			Repository CodeItemRepository {
				findAll;
			}
		}

		Entity QuerySelectionItem {
			databaseTable="TB_QUERY_SELECTION_ITEMS"
			hint="idSequence=QUERY_SELECTION_ITEMS"
			!auditable
			
			"Added explicitly to avoid that Sculptor generate UUID"
			Long id key;
			
			String dimension not nullable;
			- Set<@CodeItem> codes inverse <-> querySelectionItem not nullable cascade="all-delete-orphan"; 
			- @Query query not nullable cascade="none" databaseColumn="QUERY_FK" <-> selection;
			
			Repository QuerySelectionItemRepository {
				findAll;
			}
		}

		Entity Query {
			databaseTable="TB_QUERIES"
			hint="idSequence=QUERIES"
			!auditable
			
			- @LifeCycleStatisticalResource lifeCycleStatisticalResource databaseColumn="STATISTICAL_RESOURCE_FK" not nullable cascade="all";
			- @DatasetVersion datasetVersion databaseColumn="DATASET_VERSION_FK" not nullable;
			- @QueryStatusEnum status not nullable;
			- Set<@QuerySelectionItem> selection inverse <-> query cascade="all-delete-orphan";
			- @QueryTypeEnum type not nullable;
			Integer latestDataNumber nullable;
			
			
			Repository QueryRepository {
				save;
				findAll;
				findById;
				findByCondition;
				findByCondition(PagingParameter pagingParameter);
				findByQuery(String query, Map<String, Object> parameters, int maxResult);
				@Query retrieveByUrn(String urn) throws MetamacException;
			}
		}
	}
}